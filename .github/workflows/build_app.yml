name: Build App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DJANGO_SECRET: "test_secret"
      DJANGO_ENV: "LOCAL"
      DB_USER: "test_dda_admin"
      DB_PASSWORD: "test_dda_password"
      DB_NAME: "dda"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U $DB_USER -d $DB_NAME"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          sudo apt-get install python3-poetry
          poetry --version

      - name: Install Dependencies
        run: poetry install --with dev,test

      - name: Check Style
        run: poetry run ruff check .

      - name: Check Types
        run: poetry run mypy dda/ tests/

      - name: Set Database URL
        env:
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}
        run: |
          echo "DATABASE_URL=postgres://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          poetry run pytest --cov=dda --cov-branch --cov-report=xml -p no:warnings

      - name: Upload Coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
