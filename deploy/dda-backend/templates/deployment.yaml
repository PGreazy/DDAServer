apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dda-backend.fullname" . }}
  labels:
    {{- include "dda-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dda-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dda-backend.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dda-backend.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: "DJANGO_SECRET"
              valueFrom:
                secretKeyRef:
                  name: django-secret
                  key: django_secret_token
            - name: "DJANGO_ENV"
              value: "{{ .Values.env.DJANGO_ENV }}"
            - name: "DB_HOST"
              value: "localhost"
            - name: "DB_PORT"
              value: "6432"
            - name: "DB_USER"
              value: "{{ .Values.pooler.db_user }}"
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: "DB_NAME"
              value: "{{ .Values.pooler.db_name }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        # TODO: Specify a user for the app to connect to pgbouncer,
        # then use a system app user for pgbouncer <-> remote database
        - name: pgbouncer
          image: bitnami/pgbouncer:latest
          env:
            - name: POSTGRESQL_HOST
              value: "{{ .Values.pooler.db_host }}"
            - name: POSTGRESQL_PORT
              value: "{{ .Values.pooler.db_port }}"
            - name: POSTGRESQL_USERNAME
              value: "{{ .Values.pooler.db_user }}"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: POSTGRESQL_DATABASE
              value: "{{ .Values.pooler.db_name }}"
            - name: PGBOUNCER_POOL_MODE
              value: "transaction"
            - name: PGBOUNCER_MAX_CLIENT_CONN
              value: "{{ .Values.pooler.max_client_conn | default 100 }}"
            - name: PGBOUNCER_DEFAULT_POOL_SIZE
              value: "{{ .Values.pooler.default_pool_size | default 20 }}"
          readinessProbe:
            tcpSocket:
              port: 6432
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 6432
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
